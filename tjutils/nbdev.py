# AUTOGENERATED! DO NOT EDIT! File to edit: ../notebooks/01-nbdev.ipynb.

# %% auto 0
__all__ = ['sync']

# %% ../notebooks/01-nbdev.ipynb 2
import tomllib
from nbdev import nbdev_export
from nbdev.config import nbdev_create_config, read_config_file
from pathlib import Path

# %% ../notebooks/01-nbdev.ipynb 3
def sync():
    "Syncs poetry config, nbdev's settings.ini, and does an export to the module."

    with open("pyproject.toml", "rb") as f:
        data = tomllib.load(f)["tool"]["poetry"]
    comment = " # Set from pyproject.toml"
    poetry_config = {
        "repo": data["name"] + comment,
        "lib_name": data["name"] + comment,
        "lib_path": data["name"] + comment,
        "version": data["version"] + comment,
        "description": data["description"] + comment,
        "license": data["license"] + comment,
        "author": ", ".join(aut.split("<")[0].strip() for aut in data["authors"])
        + comment,
        "author_email": ", ".join(
            aut.split("<")[1].replace(">", "") for aut in data["authors"]
        )
        + comment,
        "min_python": data["dependencies"]["python"].replace("^", "") + comment,
    }

    settings_file = Path("settings.ini")
    if settings_file.is_file():
        config = dict(read_config_file(settings_file)) | poetry_config
        settings_file.unlink()
    else:
        config = poetry_config
    nbdev_create_config(**config)
    nbdev_export(config["nbs_path"])

